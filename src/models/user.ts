import { z } from "zod";

export const UserSchema = z.object({
  id: z.string(),
  name: z.string(), // first name and last name
  username: z.string(),
  email: z.string(),
  emailVerified: z.boolean(),
  image: z.string().optional(),
  createdAt: z.date(),
  updatedAt: z.date(),
  sessions: z.array(z.object({
    id: z.string(),
    expiresAt: z.date(),
    token: z.string(),
    createdAt: z.date(),
    updatedAt: z.date(),
    ipAddress: z.string().optional(),
    userAgent: z.string().optional(),
    userId: z.string(),
    user: z.object({
      id: z.string(),
      name: z.string(),
      username: z.string(),
      email: z.string(),
      emailVerified: z.boolean(),
      image: z.string().optional(),
      createdAt: z.date(),
      updatedAt: z.date(),
    }),
  })),
  accounts: z.array(z.object({
    id: z.string(),
    accountId: z.string(),
    providerId: z.string(),
    userId: z.string(),
    user: z.object({
      id: z.string(),
      name: z.string(),
      username: z.string(),
      email: z.string(),
      emailVerified: z.boolean(),
      image: z.string().optional(),
      createdAt: z.date(),
      updatedAt: z.date(),
    }),
    accessToken: z.string().optional(),
    refreshToken: z.string().optional(),
    idToken: z.string().optional(),
    accessTokenExpiresAt: z.date().optional(),
    refreshTokenExpiresAt: z.date().optional(),
    scope: z.string().optional(),
    password: z.string().optional(),
    createdAt: z.date(),
    updatedAt: z.date(),
  })),
  rating: z.number(),
  wins: z.number(),
  losses: z.number(),
  matchesWhite: z.number(),
  matchesBlack: z.number(),
  matchesWon: z.number(),
  matchesLost: z.number(),
  matchesDraw: z.number(),
});

export type User = z.infer<typeof UserSchema>;